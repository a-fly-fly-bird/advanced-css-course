/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/*
  https://developer.mozilla.org/zh-CN/docs/Web/CSS/box-sizing
*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/*
  优先级从高到低的字体列表
*/
body {
  font-family: 'Long Cang', cursive, Georgia, 'Times New Roman', Times, serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

/*
  https://bennettfeely.com/clippy/
*/
.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(128, 214, 113, 0.8), rgba(39, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: center;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.logo:hover {
  transform: scale(120%);
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 60px;
}


.heading-primary-main {
  display: block;
  font-size: 80px;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInLeft;
  animation-duration: 1s;
}

.heading-primary-sub {
  display: block;
  font-size: 30px;
  font-weight: 400;
  letter-spacing: 17.4px;
  animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px) rotate(0deg);
  }

  60% {
    transform: rotate(60deg);
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/*
  在CSS中，"all"是一个关键字，表示选择所有的元素。当你使用"transition all"时，你正在告诉浏览器你想要应用一个过渡效果到所有可过渡的元素上。这意味着，如果你有一个元素可以改变其颜色、大小或位置，那么这个过渡效果将应用于该元素的所有相关属性。
*/

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  transition: all 0.2s;
  position: relative;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active{
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
  background-color: #fff;
  color: #777;
}

.btn::after{
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s;
}

/*
这里的.btn::after和.btn-white::after实际上指的是同一个元素，因为按照定义，都是类对应的元素的最后一个子元素, 有了content就是创建的。
所以解答了我之前的困惑，为什么视频里说必须要写content，哪怕是空字符，才会显示，但是下面的.btn-white::after并没有写也有效果。
*/

.btn-white::after{
  background-color: #fff;
}

/*
  这里实际上跟上面俩控制的也是同一个元素。
*/

.btn:hover::after{
  transform: scaleX(1.4) scaleY(1.5);
  opacity: 0;
}

.btn-animated{
  animation: moveInBottom .5s ease-out 0.75s;
  animation-fill-mode: backwards;
}
